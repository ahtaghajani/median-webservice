{"map":"{\"version\":3,\"sources\":[\"G:\\\\code challenge\\\\RapidMiner\\\\median-webservice\\\\src\\\\main\\\\app\\\\src\\\\components\\\\header.js\",\"G:\\\\code challenge\\\\RapidMiner\\\\median-webservice\\\\src\\\\main\\\\app\\\\src\\\\components\\\\request.js\",\"G:\\\\code challenge\\\\RapidMiner\\\\median-webservice\\\\src\\\\main\\\\app\\\\src\\\\components\\\\fetchRequest.js\",\"G:\\\\code challenge\\\\RapidMiner\\\\median-webservice\\\\src\\\\main\\\\app\\\\src\\\\App.js\",\"G:\\\\code challenge\\\\RapidMiner\\\\median-webservice\\\\src\\\\main\\\\app\\\\src\\\\serviceWorker.js\",\"G:\\\\code challenge\\\\RapidMiner\\\\median-webservice\\\\src\\\\main\\\\app\\\\src\\\\index.js\"],\"names\":[\"Header\",\"react_default\",\"a\",\"createElement\",\"className\",\"Request\",\"req\",\"style\",\"maxWidth\",\"JSON\",\"stringify\",\"id\",\"rawContent\",\"contentMedianByLabel\",\"dateTime\",\"FetchRequest\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"populateRowsWithData\",\"state\",\"articlesDetails\",\"map\",\"article\",\"request\",\"key\",\"headline\",\"category\",\"pubDate\",\"dateString\",\"snippet\",\"webURL\",\"activePage\",\"totalPages\",\"itemsCountPerPage\",\"totalItemsCount\",\"handlePageChange\",\"bind\",\"assertThisInitialized\",\"fetchURL\",\"page\",\"_this2\",\"axios\",\"get\",\"concat\",\"then\",\"response\",\"data\",\"size\",\"totalElements\",\"setState\",\"updatedResults\",\"content\",\"results\",\"Date\",\"toGMTString\",\"objectSpread\",\"console\",\"log\",\"pageNumber\",\"Pagination_default\",\"hideNavigation\",\"pageRangeDisplayed\",\"itemClass\",\"linkClass\",\"onChange\",\"React\",\"Component\",\"App\",\"header\",\"fetchRequest\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\nconst Header = () => {\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"jumbotron \\\">\\r\\n      <div className=\\\"container \\\">\\r\\n        <h1 className=\\\"display-4 \\\">React Pagination Demo</h1>\\r\\n        <p className=\\\"lead\\\">Itâ€™s important to limit the amount of data queried by your API in a request.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    );\\r\\n  };\\r\\n\\r\\n  export default Header;\\r\\n\",\"import React from 'react';\\r\\n\\r\\n\\r\\nfunction Request (req) {\\r\\n\\r\\n  let styles = {\\r\\n    maxWidth: '700px'\\r\\n  };\\r\\n\\r\\n\\r\\n  return (\\r\\n      <div className=\\\"card border-dark bg-light text-dark text-center p-3 mb-3 ml-5 mr-5\\\" style={styles}>\\r\\n        <div className=\\\"card-header\\\">\\r\\n            total: {JSON.stringify(req)}\\r\\n          <h2>{req.id}</h2>\\r\\n          <h4 className=\\\"card-title btn btn-secondary\\\">{req.rawContent}</h4>\\r\\n        </div>\\r\\n        <div className=\\\"card-body\\\">\\r\\n\\r\\n          <small className=\\\"text-muted mb-3\\\">{req.contentMedianByLabel}</small>\\r\\n          <p className=\\\"card-text\\\">{req.dateTime}</p>\\r\\n        </div>\\r\\n        <div className=\\\"card-footer\\\">\\r\\n          {/*<a href={req.webURL} className=\\\"btn btn-secondary\\\">Read more</a>*/}\\r\\n        </div>\\r\\n      </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default Request;\\r\\n\",\"import React from 'react';\\r\\nimport axios from 'axios';\\r\\nimport Pagination from \\\"react-js-pagination\\\";\\r\\nimport Request  from './request.js';\\r\\n\\r\\nclass FetchRequest extends React.Component {\\r\\n\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.state = {\\r\\n      articlesDetails: [],\\r\\n      activePage:1,\\r\\n      totalPages: null,\\r\\n      itemsCountPerPage:null,\\r\\n      totalItemsCount:null\\r\\n    };\\r\\n    this.handlePageChange = this.handlePageChange.bind(this);\\r\\n    this.fetchURL = this.fetchURL.bind(this);\\r\\n  }\\r\\n\\r\\n  fetchURL(page) {\\r\\n\\r\\n    axios.get(`http://localhost:8080/requests?page=${page}&size=5`)\\r\\n      .then( response => {\\r\\n\\r\\n          const totalPages = response.data.totalPages;\\r\\n          const itemsCountPerPage = response.data.size;\\r\\n          const totalItemsCount = response.data.totalElements;\\r\\n\\r\\n          this.setState({totalPages: totalPages})\\r\\n          this.setState({totalItemsCount: totalItemsCount})\\r\\n          this.setState({itemsCountPerPage: itemsCountPerPage})\\r\\n\\r\\n          const results = response.data.content;\\r\\n\\r\\n          const updatedResults = results.map(results => {\\r\\n\\r\\n            var timestamp = new Date(results.pubDate)\\r\\n            var dateString = timestamp.toGMTString()\\r\\n            return {\\r\\n                ...results, dateString\\r\\n              }\\r\\n            });\\r\\n\\r\\n            this.setState({articlesDetails: updatedResults});\\r\\n            console.log(updatedResults);\\r\\n            console.log(this.state.activePage);\\r\\n            console.log(this.state.itemsCountPerPage);\\r\\n\\r\\n        }\\r\\n      );\\r\\n    }\\r\\n\\r\\n  componentDidMount () {\\r\\n      this.fetchURL(this.state.activePage)\\r\\n    }\\r\\n\\r\\n  handlePageChange(pageNumber) {\\r\\n    console.log(`active page is ${pageNumber}`);\\r\\n    this.setState({activePage: pageNumber})\\r\\n    this.fetchURL(pageNumber)\\r\\n\\r\\n    }\\r\\n\\r\\n  populateRowsWithData = () => {\\r\\n    const articleData = this.state.articlesDetails.map(article => {\\r\\n        return <Request\\r\\n            key = {article.id}\\r\\n            headline = {article.headline}\\r\\n            category = {article.category}\\r\\n            pubDate = {article.dateString}\\r\\n            snippet = {article.snippet}\\r\\n            webURL = {article.webURL}\\r\\n          />;\\r\\n      });\\r\\n\\r\\n      return articleData\\r\\n    }\\r\\n\\r\\n  render(){\\r\\n\\r\\n    return (\\r\\n      <div >\\r\\n\\r\\n      {this.populateRowsWithData()}\\r\\n\\r\\n      <div className=\\\"d-flex justify-content-center\\\">\\r\\n        <Pagination\\r\\n         hideNavigation\\r\\n         activePage={this.state.activePage}\\r\\n         itemsCountPerPage={this.state.itemsCountPerPage}\\r\\n         totalItemsCount={this.state.totalItemsCount}\\r\\n         pageRangeDisplayed={10}\\r\\n         itemClass='page-item'\\r\\n         linkClass='btn btn-light'\\r\\n         onChange={this.handlePageChange}\\r\\n         />\\r\\n       </div>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default FetchRequest;\\r\\n\",\"import React, { Component } from 'react';\\r\\n\\r\\nimport './App.css';\\r\\n\\r\\nimport Header from './components/header.js';\\r\\nimport FetchRequest  from './components/fetchRequest.js';\\r\\n\\r\\nclass App extends Component {\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <Header />\\r\\n        <div className=\\\"d-flex justify-content-center\\\">\\r\\n          <FetchRequest />\\r\\n        </div>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read https://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{23:function(e,t,a){e.exports=a(52)},28:function(e,t,a){},29:function(e,t,a){},52:function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),i=a(19),l=a.n(i),o=(a(28),a(3)),s=a(4),r=a(6),u=a(5),m=a(7),d=(a(29),function(){return c.a.createElement(\"div\",{className:\"jumbotron \"},c.a.createElement(\"div\",{className:\"container \"},c.a.createElement(\"h1\",{className:\"display-4 \"},\"React Pagination Demo\"),c.a.createElement(\"p\",{className:\"lead\"},\"It\\u2019s important to limit the amount of data queried by your API in a request.\")))}),h=a(22),g=a(2),p=a(20),v=a.n(p),b=a(21),f=a.n(b);var P=function(e){return c.a.createElement(\"div\",{className:\"card border-dark bg-light text-dark text-center p-3 mb-3 ml-5 mr-5\",style:{maxWidth:\"700px\"}},c.a.createElement(\"div\",{className:\"card-header\"},\"total: \",JSON.stringify(e),c.a.createElement(\"h2\",null,e.id),c.a.createElement(\"h4\",{className:\"card-title btn btn-secondary\"},e.rawContent)),c.a.createElement(\"div\",{className:\"card-body\"},c.a.createElement(\"small\",{className:\"text-muted mb-3\"},e.contentMedianByLabel),c.a.createElement(\"p\",{className:\"card-text\"},e.dateTime)),c.a.createElement(\"div\",{className:\"card-footer\"}))},E=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(r.a)(this,Object(u.a)(t).call(this,e))).populateRowsWithData=function(){return a.state.articlesDetails.map(function(e){return c.a.createElement(P,{key:e.id,headline:e.headline,category:e.category,pubDate:e.dateString,snippet:e.snippet,webURL:e.webURL})})},a.state={articlesDetails:[],activePage:1,totalPages:null,itemsCountPerPage:null,totalItemsCount:null},a.handlePageChange=a.handlePageChange.bind(Object(g.a)(a)),a.fetchURL=a.fetchURL.bind(Object(g.a)(a)),a}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"fetchURL\",value:function(e){var t=this;v.a.get(\"http://localhost:8080/requests?page=\".concat(e,\"&size=5\")).then(function(e){var a=e.data.totalPages,n=e.data.size,c=e.data.totalElements;t.setState({totalPages:a}),t.setState({totalItemsCount:c}),t.setState({itemsCountPerPage:n});var i=e.data.content.map(function(e){var t=new Date(e.pubDate).toGMTString();return Object(h.a)({},e,{dateString:t})});t.setState({articlesDetails:i}),console.log(i),console.log(t.state.activePage),console.log(t.state.itemsCountPerPage)})}},{key:\"componentDidMount\",value:function(){this.fetchURL(this.state.activePage)}},{key:\"handlePageChange\",value:function(e){console.log(\"active page is \".concat(e)),this.setState({activePage:e}),this.fetchURL(e)}},{key:\"render\",value:function(){return c.a.createElement(\"div\",null,this.populateRowsWithData(),c.a.createElement(\"div\",{className:\"d-flex justify-content-center\"},c.a.createElement(f.a,{hideNavigation:!0,activePage:this.state.activePage,itemsCountPerPage:this.state.itemsCountPerPage,totalItemsCount:this.state.totalItemsCount,pageRangeDisplayed:10,itemClass:\"page-item\",linkClass:\"btn btn-light\",onChange:this.handlePageChange})))}}]),t}(c.a.Component),y=function(e){function t(){return Object(o.a)(this,t),Object(r.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return c.a.createElement(\"div\",null,c.a.createElement(d,null),c.a.createElement(\"div\",{className:\"d-flex justify-content-center\"},c.a.createElement(E,null)))}}]),t}(n.Component);a(51),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(c.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[23,1,2]]]);","extractedComments":[]}